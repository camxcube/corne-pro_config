#define L0 0
#define L1 0
#define L2 0
#define L3 0
#define L4 0
#define L5 0
#define L6 0
#define L7 0
#define L8 0
#define L9 0
#define L10 0
#define L11 0
#define L12 0


#include "key-common.dtsi"

&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};

&lt {
   flavor = "hold-preferred";
   tapping_term_ms = <200>;
};

/ {

// Tap dance setting
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "RShift when tap once, CapsL when tap twice";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHFT>, <&kp CAPS>;
        };

        ht_hp: hold_tap_hold_preffered {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold tap with hold preferred flavor";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

// **Legend**
// Mo   : Momentary switch to layer
// Td	: Tap Dance
// M/T	: Momentary switch to layer, double press to toggle layer
// Co	: Combo Keys
// ToLay: Set default layer
// Tog  : Toogle layer
// CBT	: Connect to bluetooth device


        default_layer {
          label = "";

                        bindings = <
   &lt FN_NUMP TAB  &kp Q  &kp W  &kp E        &kp R      &kp T             &kp Y      &kp U              &kp I           &kp O    &kp P     &kp BSPC
   &kp LCMD         &kp A  &kp S  &kp D        &kp F      &kp G             &kp H      &kp J              &kp K           &kp L    &kp SEMI  &kp ENTER
   &kp LSHFT        &kp Z  &kp X  &kp C        &kp V      &kp B             &kp N      &kp M              &kp COMMA       &kp DOT  &kp FSLH  &td0
                                  &lt CMD ESC  &kp SPACE  &kp LALT          &kp LCTRL  &lt NUM_SYM SPACE  &kp RCMD
                        >;
                };


        1st_layer {
          label = "";

                        bindings = <
   &kp LG(COMMA)  &kp LG(H)          &kp LG(LEFT)  &kp UP     &kp LG(RIGHT)  &kp LG(GRAVE)          &none         &kp F13   &kp F14   &kp F15        &none     &kp BSPC
   &kp LCMD       &kp LC(LS(TAB))    &kp LEFT      &kp DOWN   &kp RIGHT      &kp LC(TAB)            &tog FN_NUMP  &none     &kp HOME  &kp PAGE_UP    &kp BSPC  &kp ENTER
   &kp LSHFT      &mac_screen_sleep  &kp LA(LEFT)  &kp LG(K)  &kp LA(RIGHT)  &kp LG(M)              &none         &kp DEL   &kp END   &kp PAGE_DOWN  &none     &kp RSHFT
                          	                       &none      &none          &none                  &kp RCTRL     &kp RALT  &kp RCMD
                        >;
                };


        2nd_layer {
            label = "";

                        bindings = <
   &kp GRAVE  &kp N1  &kp N2    &kp N3     &kp N4     &kp N5            &kp N6    &kp N7            &kp N8     &kp N9     &kp N0    &kp MINUS
   &kp LCMD   &none   &kp BSLH  &kp RBKT   &kp LBKT   &none             &kp LEFT  &kp DOWN          &kp UP     &kp RIGHT  &none     &kp EQUAL
   &kp LSHFT  &none   &none     &none      &none      &none             &none     &kp SINGLE_QUOTE  &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                    	        &kp LCTRL  &kp SPACE  &kp LALT          &none     &none             &none
                        >;
                };


         3rd_layer {
            label = "";

                        bindings = <
   &none         &mo WIN_ARR    &kp F7  &kp F8     &kp F9        &kp F10           &kp TAB          &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp SPACE     &kp BSPC
   &kp LC(UP)    &kp LC(LEFT)   &kp F4  &kp F5     &kp F6        &kp F11           &kp KP_MULTIPLY  &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp ENTER
   &kp LC(DOWN)  &kp LC(RIGHT)  &kp F1  &kp F2     &kp F3        &kp F12           &kp KP_DIVIDE    &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_MINUS  &kp RSHFT
                                        &mo MEDIA  &tog FN_NUMP  &kp LALT          &kp SPACE        &lt MEDIA KP_N0  &kp DOT
                        >;
                };


         4th_layer {
            label = "";

                        bindings = <
   &none  &none       &bt BT_SEL 0  &kp C_PLAY_PAUSE  &none         &none                 &none     &none     &none   &none      &none  &none
   &none  &none       &bt BT_SEL 1  &kp C_VOL_UP      &kp C_BRI_UP  &out OUT_TOG          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
   &none  &bt BT_CLR  &bt BT_SEL 2  &kp C_VOL_DN      &kp C_BRI_DN  &none                 &none     &none     &none   &none      &none  &none
                                    &none             &none         &none                 &none     &none     &none
                        >;
                };


         5th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         6th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         7th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         8th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         9th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         10th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         11th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


         12th_layer {
            label = "";

                        bindings = <
   &none  &none              &kp LC(LA(LS(W)))  &kp LC(LA(LS(E)))  &kp LC(LA(LS(R)))      &kp LC(LA(LS(T)))          &kp LC(LA(LS(Y)))  &kp LC(LA(LS(U)))      &kp LC(LA(LS(I)))      &kp LC(LA(LS(O)))    &kp LC(LA(LS(P)))     &kp LC(LA(LS(BSPC)))
   &none  &kp LC(LA(LS(A)))  &kp LC(LA(LS(S)))  &kp LC(LA(LS(D)))  &kp LC(LA(LS(F)))      &kp LC(LA(LS(G)))          &kp LC(LA(LS(H)))  &kp LC(LA(LS(J)))      &kp LC(LA(LS(K)))      &kp LC(LA(LS(L)))    &kp LC(LA(LS(SEMI)))  &kp LC(LA(LS(ENTER)))
   &none  &kp LC(LA(LS(Z)))  &kp LC(LA(LS(X)))  &kp LC(LA(LS(C)))  &kp LC(LA(LS(V)))      &kp LC(LA(LS(B)))          &kp LC(LA(LS(N)))  &kp LC(LA(LS(M)))      &kp LC(LA(LS(COMMA)))  &kp LC(LA(LS(DOT)))  &kp LC(LA(LS(FSLH)))  &none
                                                &none              &kp LC(LA(LS(SPACE)))  &none                      &none              &kp LC(LA(LS(SPACE)))  &none
                        >;
                };


        };
};
